-- Création d'une interface utilisateur dans CoreGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "HyraxPanel"  -- Nom du panneau
ScreenGui.Parent = game:GetService("CoreGui")

-- Panneau principal (zone de contenu)
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 600, 0, 700)  -- Taille du panneau
MainFrame.Position = UDim2.new(0.5, -300, 0.5, -350)  -- Position centrée
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)  -- Couleur de fond
MainFrame.Parent = ScreenGui

-- Application des coins arrondis au panneau principal
local UICornerMain = Instance.new("UICorner")
UICornerMain.CornerRadius = UDim.new(0, 12)  -- Rayon des coins
UICornerMain.Parent = MainFrame

-- Barre de titre du panneau
local TitleBar = Instance.new("Frame")
TitleBar.Size = UDim2.new(1, 0, 0, 40)  -- Taille de la barre
TitleBar.BackgroundColor3 = Color3.fromRGB(20, 20, 20)  -- Couleur de fond
TitleBar.Parent = MainFrame

-- Texte du titre (Nom du panneau)
local TitleText = Instance.new("TextLabel")
TitleText.Size = UDim2.new(0.7, 0, 1, 0)  -- Taille du texte
TitleText.Position = UDim2.new(0, 15, 0, 0)  -- Position du texte
TitleText.BackgroundTransparency = 1  -- Pas de fond
TitleText.Text = "Hyrax's"  -- Texte affiché
TitleText.TextColor3 = Color3.fromRGB(255, 255, 255)  -- Couleur du texte
TitleText.Font = Enum.Font.SourceSansBold  -- Police du texte
TitleText.TextSize = 20  -- Taille du texte
TitleText.TextXAlignment = Enum.TextXAlignment.Left  -- Alignement du texte
TitleText.Parent = TitleBar

-- Panneau des onglets (section supérieure pour les onglets)
local TabsPanel = Instance.new("Frame")
TabsPanel.Size = UDim2.new(1, 0, 0, 50)  -- Taille du panneau des onglets
TabsPanel.Position = UDim2.new(0, 0, 0, 40)  -- Position juste sous la barre de titre
TabsPanel.BackgroundColor3 = Color3.fromRGB(40, 40, 40)  -- Couleur de fond
TabsPanel.Parent = MainFrame

-- Bouton de fermeture du panneau
local CloseButton = Instance.new("TextButton")
CloseButton.Size = UDim2.new(0, 30, 0, 30)  -- Taille du bouton
CloseButton.Position = UDim2.new(0, 560, 0, 5)  -- Position du bouton de fermeture
CloseButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)  -- Couleur de fond
CloseButton.Text = "X"  -- Texte du bouton
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)  -- Couleur du texte
CloseButton.Font = Enum.Font.SourceSansBold  -- Police du texte
CloseButton.TextSize = 18  -- Taille du texte
CloseButton.Parent = TitleBar
CloseButton.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()  -- Ferme le panneau lorsque le bouton est cliqué
end)

-- Ajouter la fonctionnalité de déplacement de l'interface
local dragging = false
local dragInput, dragStart, startPos

TitleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
    end
end)

TitleBar.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

TitleBar.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)


------------------------
-- Tab
------------------------


-- Table pour stocker le contenu des onglets
local TabContents = {}

-- Fonction pour créer un nouvel onglet
local function CreateTab(name, index)
    local TabButton = Instance.new("TextButton")
    TabButton.Size = UDim2.new(0.2, 0, 1, 0)  -- Taille du bouton de l'onglet
    TabButton.Position = UDim2.new(0.2 * (index - 1), 0, 0, 0)  -- Position en fonction de l'index
    TabButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)  -- Couleur de fond
    TabButton.Text = name  -- Nom de l'onglet
    TabButton.TextColor3 = Color3.fromRGB(255, 255, 255)  -- Couleur du texte
    TabButton.Font = Enum.Font.SourceSansBold  -- Police du texte
    TabButton.TextSize = 18  -- Taille du texte
    TabButton.Parent = TabsPanel

    -- Création de la zone de contenu de l'onglet
    local TabFrame = Instance.new("Frame")
    TabFrame.Size = UDim2.new(1, 0, 1, -90)  -- Taille de la zone de contenu
    TabFrame.Position = UDim2.new(0, 0, 0, 90)  -- Position de la zone sous les onglets
    TabFrame.Visible = index == 1  -- L'onglet 1 est visible au départ
    TabFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)  -- Couleur de fond de l'onglet
    TabFrame.Parent = MainFrame
    table.insert(TabContents, TabFrame)  -- Ajouter l'onglet à la table de contenu

    -- Gestion du clic sur l'onglet pour afficher le contenu associé
    TabButton.MouseButton1Click:Connect(function()
        -- Masquer tous les onglets et afficher celui sélectionné
        for _, frame in pairs(TabContents) do
            frame.Visible = false
        end
        TabFrame.Visible = true
    end)

    return TabFrame
end


------------------------
-- Section
------------------------


-- Fonction pour créer une section dans un onglet
local function CreateSection(tab, sectionName)
    local section = Instance.new("Frame")
    section.Size = UDim2.new(1, 0, 0, 300)  -- Taille de la section
    section.Position = UDim2.new(0, 0, 0, 10)  -- Position de la section
    section.BackgroundTransparency = 1  -- Pas de fond
    section.Parent = tab

    -- Application des coins arrondis à la section
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 8)  -- Rayon des coins
    UICorner.Parent = section

    -- Titre de la section
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, 0, 0, 30)  -- Taille du titre
    titleLabel.BackgroundTransparency = 1  -- Pas de fond
    titleLabel.Text = sectionName or "Section"  -- Nom de la section
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)  -- Couleur du texte
    titleLabel.Font = Enum.Font.SourceSans  -- Police du texte
    titleLabel.TextSize = 18  -- Taille du texte
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left  -- Alignement à gauche
    titleLabel.Parent = section
    titleLabel.Position = UDim2.new(0, 10, 0, 0)  -- Position du titre

    -- Variable pour gérer la position des éléments dans la section
    local positionY = 30  -- Le titre commence à la position Y 30

    -- Fonction pour ajuster la position des éléments dans la section
    local function adjustPositionY(element)
        element.Position = UDim2.new(0, 10, 0, positionY)
        positionY = positionY + element.Size.Y.Offset + 10  -- Espacement de 10 entre les éléments
    end

    return section, adjustPositionY
end


------------------------
-- TopBar
------------------------

-- Fonction pour récupérer un élément dans la TopBar
local function getTopBarElement(path)
    local element = game:GetService("CoreGui"):FindFirstChild("TopBarApp", true)
    for _, name in ipairs(path) do
        if not element then return nil end
        element = element:FindFirstChild(name)
    end
    return element
end

-- Fonction pour ajuster la taille de menuSection
local function updateMenuSectionSize(panelContainer, menuSection)
    if not panelContainer or not menuSection then return end
    local numberOfChildren = #panelContainer:GetChildren()  -- Compte le nombre d'enfants
    local correctWidth = numberOfChildren * 44  -- Chaque bouton a une largeur de 44
    menuSection.Size = UDim2.new(0, correctWidth, 0, 44)  -- Mise à jour de la taille de la section
end

-- Surveiller la taille de menuSection en temps réel
local function monitorMenuSectionSize(panelContainer, menuSection)
    game:GetService("RunService").Heartbeat:Connect(function()
        if not panelContainer or not menuSection then return end
        updateMenuSectionSize(panelContainer, menuSection)  -- Mise à jour continue
    end)
end

-- Créer une TopBar pour un bouton avec le nom, l'icône et le Flag
local function CreateTopBar(Name, Icon, Flag)
    local panelContainer = getTopBarElement({"UnibarLeftFrame", "UnibarMenu", "2", "3"})
    if not panelContainer then
        warn("PanelContainer introuvable.")
        return
    end

    local menuSection = getTopBarElement({"UnibarLeftFrame", "UnibarMenu", "2"})
    if not menuSection then
        warn("Section '2' introuvable dans UnibarMenu.")
        return
    end

    -- Créer le bouton
    local button = Instance.new("TextButton")
    button.Name = Name
    button.Size = UDim2.new(0, 44, 0, 44)
    button.Position = UDim2.new(0, #panelContainer:GetChildren() * 44, 0, 0)
    button.Text = ""
    button.BackgroundTransparency = 1
    button.Parent = panelContainer

    -- Créer l'icône
    local icon = Instance.new("ImageLabel")
    icon.Name = "Icon"
    icon.Image = Icon
    icon.Size = UDim2.new(0, 22, 0, 22)
    icon.Position = UDim2.new(0.5, -11, 0.5, -11)
    icon.BackgroundTransparency = 1
    icon.ImageColor3 = Color3.fromRGB(255, 255, 255)
    icon.Parent = button

    -- Création d'un Highlight
    local highlight = Instance.new("Frame")
    highlight.Name = "Highlight"
    highlight.BackgroundColor3 = Color3.fromRGB(163, 162, 165)
    highlight.BackgroundTransparency = 0.9
    highlight.Size = UDim2.new(0, 36, 0, 36)
    highlight.Position = UDim2.new(0.5, 0, 0.5, 0)
    highlight.AnchorPoint = Vector2.new(0.5, 0.5)
    highlight.Visible = false
    highlight.Parent = button

    local uiCorner = Instance.new("UICorner")
    uiCorner.CornerRadius = UDim.new(0.5, 0)
    uiCorner.Parent = highlight

    -- Ajout des interactions pour le Highlight
    button.MouseEnter:Connect(function()
        highlight.Visible = true
    end)
    button.MouseLeave:Connect(function()
        highlight.Visible = false
    end)

    -- Lors du clic sur le bouton, mettre à jour le ButtonActivity en fonction du Flag
    button.MouseButton1Click:Connect(function()
        -- Cherche le toggle lié au Flag
        local toggle = game:GetService("ReplicatedStorage"):FindFirstChild(Flag)
        if toggle and toggle:IsA("BoolValue") then
            -- Inverse l'état
            toggle.Value = not toggle.Value

            -- Met à jour la couleur de l'icône
            icon.ImageColor3 = toggle.Value and Color3.fromRGB(255, 255, 0) or Color3.fromRGB(255, 255, 255)

            ToggleInfiniteJump(toggle.Value)
        else
            warn("Toggle introuvable ou type incorrect pour le Flag : " .. Flag)
        end
    end)

    -- Ajuster la taille de menuSection après l'ajout des boutons
    -- Utiliser `delay` pour s'assurer que l'ajustement ne bloque pas les interactions
    delay(0.1, function()
        updateMenuSectionSize(panelContainer, menuSection)
        monitorMenuSectionSize(panelContainer, menuSection)  -- Surveiller la taille en temps réel
    end)
end

-- Supprimer la TopBar associée au nom
local function DestroyTopBar(Name)
    local panelContainer = getTopBarElement({"UnibarLeftFrame", "UnibarMenu", "2", "3"})
    if panelContainer then
        local button = panelContainer:FindFirstChild(Name)
        if button then
            button:Destroy()
            -- Ajuster à nouveau la taille après la suppression
            local menuSection = getTopBarElement({"UnibarLeftFrame", "UnibarMenu", "2"})
            if menuSection then
                updateMenuSectionSize(panelContainer, menuSection)
            end
        else
            warn("Bouton '" .. Name .. "' introuvable.")
        end
    else
        warn("PanelContainer introuvable.")
    end
end

------------------------
-- Pin
------------------------

local function CreatePin(parent, initialPinActivity, buttonName, buttonIcon, flag)
    local pinButton = Instance.new("TextButton")
    pinButton.Size = UDim2.new(0, 20, 0, 20)
    pinButton.Position = UDim2.new(1, -30, 0.5, -10)
    pinButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    pinButton.Text = initialPinActivity and "📍" or "📌"
    pinButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    pinButton.Font = Enum.Font.SourceSansBold
    pinButton.TextSize = 18
    pinButton.Parent = parent

    pinButton.MouseButton1Click:Connect(function()
        initialPinActivity = not initialPinActivity

        if initialPinActivity then
            pinButton.Text = "📍"
            CreateTopBar(buttonName, buttonIcon, flag)
        else
            pinButton.Text = "📌"
            DestroyTopBar(buttonName)
        end
    end)

    return pinButton
end

------------------------
-- Toggle
------------------------

local function CreateToggle(parent, params, adjustPositionY)
    local toggleFrame = Instance.new("Frame")
    toggleFrame.Size = UDim2.new(1, -20, 0, 40)
    toggleFrame.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
    toggleFrame.Parent = parent

    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 8)
    UICorner.Parent = toggleFrame

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0.7, 0, 1, 0)
    label.Position = UDim2.new(0, 40, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = params.Name or "Toggle"
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.Font = Enum.Font.SourceSans
    label.TextSize = 16
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = toggleFrame

    local onOffButton = Instance.new("TextButton")
    onOffButton.Size = UDim2.new(0, 40, 0, 20)
    onOffButton.Position = UDim2.new(0.86, 0, 0.5, -10)
    onOffButton.BackgroundColor3 = params.ButtonActivity and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
    onOffButton.Text = (params.ButtonActivity and "ON") or "OFF"
    onOffButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    onOffButton.Font = Enum.Font.SourceSans
    onOffButton.TextSize = 14
    onOffButton.Parent = toggleFrame

    -- Créer un BoolValue pour le Flag
    local toggleValue = Instance.new("BoolValue")
    toggleValue.Name = params.Flag
    toggleValue.Value = params.ButtonActivity
    toggleValue.Parent = game:GetService("ReplicatedStorage")

    -- Synchronisation du bouton avec le Flag
    toggleValue:GetPropertyChangedSignal("Value"):Connect(function()
        onOffButton.Text = toggleValue.Value and "ON" or "OFF"
        onOffButton.BackgroundColor3 = toggleValue.Value and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)

        -- Met à jour le TextButton de la TopBar pour activer/désactiver en fonction de l'état
        local topBarButton = getTopBarElement({"UnibarLeftFrame", "UnibarMenu", "2", "3"}):FindFirstChild(params.Name)
        if topBarButton then
            local icon = topBarButton:FindFirstChild("Icon")
            if icon then
                icon.ImageColor3 = toggleValue.Value and Color3.fromRGB(255, 255, 0) or Color3.fromRGB(255, 255, 255)
            end
        end
    end)

    onOffButton.MouseButton1Click:Connect(function()
        toggleValue.Value = not toggleValue.Value
        if params.Callback then
            params.Callback(toggleValue.Value)
        end
    end)

    if params.PinActivity ~= nil then
        CreatePin(toggleFrame, params.PinActivity, params.Name, params.Icon, params.Flag)
    end

    adjustPositionY(toggleFrame)
end
